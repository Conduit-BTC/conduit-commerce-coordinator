import type {
    MedusaRequest,
    MedusaResponse,
} from "@medusajs/framework/http"
import { getNdk } from "@/utils/NdkService";
import { NDKEvent } from "@nostr-dev-kit/ndk";

export async function POST(
    req: MedusaRequest,
    res: MedusaResponse
) {
    const { eventId } = req.query;

    if (!eventId || typeof eventId !== 'string') {
        res.status(400).send({ message: 'Missing event ID (string).' });
        return;
    }

    const ndk = await getNdk();
    const deleteRequestEvent = new NDKEvent(ndk);
    deleteRequestEvent.kind = 5;
    deleteRequestEvent.tags = [["e", eventId as string], ["k", "30018"]];
    deleteRequestEvent.content = "[Conduit Commerce Coordinator] - This Product deletion request has been generated by the Merchant via their instance of Conduit Commerce Coordinator. Please remove this product from the relay immediately.";

    await deleteRequestEvent.sign();

    console.log("Publishing deletion event: ", deleteRequestEvent);

    const publishPromise = deleteRequestEvent.publish();

    await Promise.race([
        publishPromise,
        new Promise((_, reject) =>
            setTimeout(() => reject(new Error('Publish timeout')), 5000)
        )
    ]);

    res.send("Deletion event published.")
}
